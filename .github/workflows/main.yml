name: CI/CD Pipeline For Streamlit Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Linting
        run: |
          # Run linting commands here (e.g., flake8, pylint)

      - name: Run Tests
        run: |
          # Run test commands here (e.g., pytest)

      - name: Security Scanning
        run: |
          # Run security scanning commands here (e.g., snyk)

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push image to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: rekogniz-app-client-user
        run: |
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME .
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest

      - name: Install AWS CLI
        run: |
            sudo apt-get update
            sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY
          aws configure set aws_secret_access_key $AWS_SECRET_KEY
          aws configure set region $AWS_REGION_NAME

      - name: Update kubeconfig and deploy pod to Amazon EKS
        env:
          AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        run: |
          aws eks --region $AWS_REGION_NAME update-kubeconfig --name rekogniz-test-cluster-be
          kubectl apply -f manifest/deployment.yaml -n dev-backend
          kubectl apply -f manifest/service.yaml -n dev-backend
          kubectl apply -f manifest/loadbalancer.yaml -n dev-backend


      - name: Force rollout
        run: kubectl rollout restart deployment rekogniz-app-backend-user -n dev-backend